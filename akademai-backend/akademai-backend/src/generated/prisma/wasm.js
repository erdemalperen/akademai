
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.12.0
 * Query Engine version: 8047c96bbd92db98a2abc7c9323ce77c02c89dbc
 */
Prisma.prismaVersion = {
  client: "6.12.0",
  engine: "8047c96bbd92db98a2abc7c9323ce77c02c89dbc"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  username: 'username',
  firstName: 'firstName',
  lastName: 'lastName',
  role: 'role',
  loginType: 'loginType',
  microsoftId: 'microsoftId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmployeeScalarFieldEnum = {
  id: 'id',
  telesetCardNo: 'telesetCardNo',
  userId: 'userId',
  departmentId: 'departmentId',
  position: 'position',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  adminLevel: 'adminLevel',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DepartmentScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LogScalarFieldEnum = {
  id: 'id',
  action_type: 'action_type',
  user_id: 'user_id',
  ip_address: 'ip_address',
  user_agent: 'user_agent',
  created_at: 'created_at',
  details: 'details',
  is_suspicious: 'is_suspicious'
};

exports.Prisma.Admin_permission_logsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  modified_by: 'modified_by',
  action: 'action',
  previous_role: 'previous_role',
  new_role: 'new_role',
  action_date: 'action_date',
  notes: 'notes'
};

exports.Prisma.Admin_permissionsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  granted_by: 'granted_by',
  permission_level: 'permission_level',
  granted_at: 'granted_at',
  revoked_at: 'revoked_at',
  is_active: 'is_active'
};

exports.Prisma.Bootcamp_progressScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  bootcamp_id: 'bootcamp_id',
  current_training_index: 'current_training_index',
  progress_percentage: 'progress_percentage',
  last_activity: 'last_activity'
};

exports.Prisma.Bootcamp_trainingsScalarFieldEnum = {
  id: 'id',
  bootcamp_id: 'bootcamp_id',
  training_id: 'training_id',
  order_index: 'order_index',
  required: 'required',
  created_at: 'created_at'
};

exports.Prisma.BootcampsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  category: 'category',
  author: 'author',
  published: 'published',
  duration: 'duration',
  deadline: 'deadline',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Conference_attendeesScalarFieldEnum = {
  id: 'id',
  conference_id: 'conference_id',
  user_id: 'user_id',
  registered_at: 'registered_at',
  attended: 'attended',
  attendance_time: 'attendance_time',
  notes: 'notes'
};

exports.Prisma.Conference_materialsScalarFieldEnum = {
  id: 'id',
  conference_id: 'conference_id',
  title: 'title',
  description: 'description',
  file_path: 'file_path',
  link: 'link',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Conference_trainingsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  category: 'category',
  location: 'location',
  start_date: 'start_date',
  end_date: 'end_date',
  capacity: 'capacity',
  author: 'author',
  published: 'published',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.EnrollmentsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  training_id: 'training_id',
  status: 'status',
  progress: 'progress',
  completed_items: 'completed_items',
  score: 'score',
  start_date: 'start_date',
  completed_at: 'completed_at',
  last_accessed_at: 'last_accessed_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.QuestionsScalarFieldEnum = {
  id: 'id',
  quiz_id: 'quiz_id',
  question_text: 'question_text',
  question_type: 'question_type',
  options: 'options',
  correct_answer: 'correct_answer',
  points: 'points',
  order_index: 'order_index',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.QuizzesScalarFieldEnum = {
  id: 'id',
  training_id: 'training_id',
  title: 'title',
  description: 'description',
  pass_threshold: 'pass_threshold',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Training_contentScalarFieldEnum = {
  id: 'id',
  training_id: 'training_id',
  title: 'title',
  content_type: 'content_type',
  content_value: 'content_value',
  order_index: 'order_index',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TrainingsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  category: 'category',
  duration: 'duration',
  author: 'author',
  published: 'published',
  tags: 'tags',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  certificateTemplate: 'certificateTemplate',
  learning_outcomes: 'learning_outcomes',
  deadline: 'deadline',
  is_mandatory: 'is_mandatory'
};

exports.Prisma.User_bootcamp_assignmentsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  bootcamp_id: 'bootcamp_id',
  assigned_at: 'assigned_at',
  completed: 'completed',
  completion_date: 'completion_date'
};

exports.Prisma.User_quiz_attemptsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  quiz_id: 'quiz_id',
  training_id: 'training_id',
  attempt_number: 'attempt_number',
  score: 'score',
  passed: 'passed',
  submitted_at: 'submitted_at',
  answers: 'answers'
};

exports.Prisma.User_training_assignmentsScalarFieldEnum = {
  assignment_id: 'assignment_id',
  user_id: 'user_id',
  training_id: 'training_id',
  assigned_at: 'assigned_at'
};

exports.Prisma.User_training_progressScalarFieldEnum = {
  user_id: 'user_id',
  bootcamp_id: 'bootcamp_id',
  training_id: 'training_id',
  status: 'status',
  started_at: 'started_at',
  completed_at: 'completed_at',
  progress_percentage: 'progress_percentage',
  completed_content_items: 'completed_content_items',
  completion_duration_seconds: 'completion_duration_seconds',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.user_role = exports.$Enums.user_role = {
  EMPLOYEE: 'EMPLOYEE',
  ADMIN_JUNIOR: 'ADMIN_JUNIOR',
  ADMIN_SENIOR: 'ADMIN_SENIOR'
};

exports.login_type = exports.$Enums.login_type = {
  TELESET_CARD: 'TELESET_CARD',
  MICROSOFT: 'MICROSOFT',
  USERNAME_PASSWORD: 'USERNAME_PASSWORD'
};

exports.Prisma.ModelName = {
  User: 'User',
  Employee: 'Employee',
  Admin: 'Admin',
  Department: 'Department',
  Log: 'Log',
  admin_permission_logs: 'admin_permission_logs',
  admin_permissions: 'admin_permissions',
  bootcamp_progress: 'bootcamp_progress',
  bootcamp_trainings: 'bootcamp_trainings',
  bootcamps: 'bootcamps',
  conference_attendees: 'conference_attendees',
  conference_materials: 'conference_materials',
  conference_trainings: 'conference_trainings',
  enrollments: 'enrollments',
  questions: 'questions',
  quizzes: 'quizzes',
  training_content: 'training_content',
  trainings: 'trainings',
  user_bootcamp_assignments: 'user_bootcamp_assignments',
  user_quiz_attempts: 'user_quiz_attempts',
  user_training_assignments: 'user_training_assignments',
  user_training_progress: 'user_training_progress'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
